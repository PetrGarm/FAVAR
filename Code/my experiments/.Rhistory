#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = 10* stl_e_acf10, y = seasonal_peak_year,
color = Moving, size = log(10000 +  trend_strength))) +
#stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = 20 * stl_e_acf10, y = seasonal_peak_year,
color = Moving, size = log(10000 +  trend_strength))) +
#stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = 5 * stl_e_acf10, y = seasonal_peak_year,
color = Moving, size = log(10000 +  trend_strength))) +
#stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = seasonal_trough_year, y = seasonal_peak_year,
color = Moving, size = log(10000 +  trend_strength))) +
#stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size = log(10000 +  trend_strength))) +
#stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size = log(10000 +  stl_e_acf1))) +
#stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size = stl_e_acf1)) +
#stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size = stl_e_acf1)) +
#stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + #geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size = stl_e_acf1)) +
#stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 2,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size = stl_e_acf1)) +
#stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 3,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size = stl_e_acf1)) +
#stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 4,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size = stl_e_acf1)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
#xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + #geom_point(shape = 4,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size = stl_e_acf1)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 2, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
facet_wrap(vars(Moving), nrow = 1) +
geom_point() + #geom_point(shape = 4,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size = stl_e_acf1)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
facet_wrap(vars(Moving), nrow = 1) +
geom_point() + #geom_point(shape = 4,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
facet_wrap(vars(Moving), nrow = 1) +
geom_point() + #geom_point(shape = 4,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + #geom_point(shape = 4,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size=2)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size=1)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size=0.2)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, size=0.002)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, label = name)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
theme(legend.position = "bottom")
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, label = name)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
geom_text_repel(force = 10, segment.color = "gray60") +
theme_minimal()
require(ggrepel)
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving, label = name)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength") +
geom_text_repel(force = 10, segment.color = "gray60") +
theme_minimal()
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength")
pc <- russia %>%
dplyr::select(value) %>%
bind_cols(., as_tibble(pca$x))
pca <- X %>%
prcomp(scale = TRUE)
View(PC)
View(pc)
pc <- X %>%
bind_cols(., as_tibble(pca$x))
View(pca)
summary(pca)
pca$rotation
View(pca$rotation)
pca$rotation %>%
ggplot(., aes(PC1, PC2, color = grepl(SLOW, name))) +
geom_point() +
theme_minimal()
grepl(SLOW, name)
colnames(X)
pca$rotation %>%
ggplot(., aes(PC1, PC2, color = grepl(SLOW, colnames(X)))) +
geom_point() +
theme_minimal()
grepl(SLOW, colnames(X))
pca$rotation %>%
ggplot(., aes(PC1, PC2, color = as.numeric(grepl(SLOW, colnames(X))))) +
geom_point() +
theme_minimal()
pca$rotation %>%
ggplot(aes(PC1, PC2, color = as.numeric(grepl(SLOW, colnames(X))))) +
geom_point() +
theme_minimal()
pca$rotation %>%
ggplot(aes(x=PC1, y=PC2, color = as.numeric(grepl(SLOW, colnames(X))))) +
geom_point() +
theme_minimal()
pca$rotation %>%
ggplot(aes(x=PC1, y=PC2, )) +
geom_point() +
theme_minimal()
pca$rotation %>%
ggplot(aes(x=PC1, y=PC2, )) +
geom_point() +
theme_minimal()
pca$rotation$1
pca$rotation["PC!"]
pca$rotation["PC1"]
pca[['rotation']]
pca[['rotation']] %>%
ggplot(aes(x=PC1, y=PC2)) +
geom_point() +
theme_minimal()
pca$rotation %>%
ggplot(aes(x=PC1, y=PC2)) +
geom_point() +
theme_minimal()
ggplot(aes(x=pca$rotation[,1], y=pca$rotation[,2])) +
geom_point() +
theme_minimal()
ggplot(aes(x=pca$rotation[1,], y=pca$rotation[2,])) +
geom_point() +
theme_minimal()
pca$rotation[,1]
as.numeric(pca$rotation[,1])
ggplot(aes(x=as.numeric(pca$rotation[,1]), y=as.numeric(pca$rotation[,2]))) +
geom_point() +
theme_minimal()
library(ggbiplot)
require(ggbiplot)
install_github("vqv/ggbiplot")
library(devtools)
install_github("vqv/ggbiplot")
require(ggbiplot)
require(ggbiplot)
russia %>%
features(value, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
color = Moving)) +
stat_density_2d(aes(fill = Moving, alpha = ..level..), bins = 5, geom = "polygon")  +
coord_equal() +
xlim(c(0,1)) + ylim(c(0,1)) +
#facet_wrap(vars(Moving), nrow = 1) +
geom_point() + geom_point(shape = 1,colour = "black")+
labs(x = "Trend strength", y = "Seasonal strength")
library("tidyverse")
library("forecast")
library("vars")
library("lmtest")
df <- read.table("C:/Users/petrg/Desktop/ЦМП/BBE_Ddisk/BBE_Ddisk/2step/nsbalpanel.txt")
ts <- ts(df, start = c(1959,1), freq = 12)
# Standardize for some reason (correct PCA extraction probably)
for (i in 1:120){
ts[,i] <- (ts[,i] - mean(ts[,i])) / sd(ts[,i])
}
ggAcf(ts[,1])
ggPacf(ts[,1])
ts.plot(ts[,1])
# x_index <- c(78,81,92,96,97,98,74,102,17,49,32,46,54,62,66,119,120)
slow_index <- c(1:53, 103:119)
y_index <- c(16, 108, 77)
'%not_in%' <- Negate('%in%')
x_index <- which(seq(1,120) %not_in% y_index)
slow_index_not_y <- slow_index[slow_index %not_in% y_index] # w.r.t ts object
Y <- ts[,y_index]
X <- ts[,x_index]
X_slow <- ts[,slow_index_not_y]
colnames(Y) <- c("IP", "CPI", "FFR")
ts.plot(Y[,3])
K = 3 # Number of factors
N = dim(X)[2]
M = dim(Y)[2]
T = dim(X)[1]
#for_modeling <- read_excel("C:/Users/petrg/Desktop/Данные для диплома/real_big_data_alina.xlsx",
#         range = "R2C3:R242C296")
for_modeling <- read.table("C:/Users/petrg/Desktop/ЦМП/BBE_Ddisk/BBE_Ddisk/2step/nsbalpanel.txt")
N_for_modeling <- dim(for_modeling)[2]
# Complete series only
complete_series_indices = c()
for(i in 1:N_for_modeling) {
if (sum(is.na(for_modeling[,i])) == 0) {
complete_series_indices = c(complete_series_indices, i)
}
}
df <- for_modeling[,complete_series_indices]
dim(df)
colnames(df) <- colnames(for_modeling)[complete_series_indices]
ts <- ts(df, start=c(2000,1), frequency = 12)
N <- dim(ts)[2]
T <- dim(ts)[1]
transformations <- rep(0, N)
#lns <- rep(0, N)
# Standardize & log
for (i in 1:N){
#if (means[i] > 10^4 & sum(ts[,i] <=0) == 0) {
#lns[i] <- 1
#ts[,i] <- log(ts[,i])
#}
ts[,i] <- (ts[,i] - mean(ts[,i])) / sd(ts[,i])
#[,i] <- ts[,i] - stl(ts[,i], 'periodic')$time.series[,1]
transformations[i] <- ndiffs(ts[,i])
}
# induce stationarity
for (i in 1:N) {
NAs <- rep(NA, transformations[i])
if(transformations[i] != 0) {
ts[,i] = c(NAs, diff(ts[,i], transformations[i]))
}
}
ts <- na.omit(ts)
# x_index <- c(78,81,92,96,97,98,74,102,17,49,32,46,54,62,66,119,120)
slow_index <- c(1:53, 103:119)
y_index <- c(16, 108, 77)
'%not_in%' <- Negate('%in%')
x_index <- which(seq(1,120) %not_in% y_index)
slow_index_not_y <- slow_index[slow_index %not_in% y_index] # w.r.t ts object
y_index
Y <- ts[,y_index]
X <- ts[,x_index]
X_slow <- ts[,slow_index_not_y]
print(colnames(Y))
T <- dim(Y)[1]
colnames(Y) <- c("IP", "CPI", "FFR")
print(colnames(Y))
y = Y[,2]
dim(Y)
# cpi
errors_FAVAR_cv <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name="CPI",
h = 12, X = X, Y = Y, X_slow = X_slow, K = 3, i_name = "FFR",
initial = 450)
source("my_tsCV.R")
source("FAVAR_CV.R")
library("readxl")
library("tidyverse")
library("forecast")
library("vars")
library("lmtest")
setwd("C:/Users/petrg/Desktop/Диплом/Code/my experiments/")
source("my_tsCV.R")
source("FAVAR_CV.R")
# cpi
errors_FAVAR_cv <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name="CPI",
h = 12, X = X, Y = Y, X_slow = X_slow, K = 3, i_name = "FFR",
initial = 450)
res_FAVAR <- sqrt(colMeans(errors_FAVAR_cv^2, na.rm = TRUE))
res_FAVAR
errors_VAR_cv <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name="CPI",
h = 12, X = X, Y = Y, X_slow = X_slow, K = 3, i_name = "FFR",
use_VAR = T,
initial = 450)
res_VAR <- sqrt(colMeans(errors_VAR_cv^2, na.rm = TRUE))
res_VAR
res_FAVAR
### auto.ARIMA model CV
fore_arima <- function(y, h) {
print(paste0(510 - length(y), " iterations left"))
return(forecast(auto.arima(y) ,h = h))
}
errors_auto_arima_cv <- tsCV(Y[,2], forecastfunction = fore_arima, h = 12,
initial = 450)
res_ARIMA <- sqrt(colMeans(errors_auto_arima_cv^2, na.rm = TRUE))
# Auto ets model CV
fore_ets <- function(y, h) {
print(paste0(510 - length(y), " iterations left"))
return(forecast(ets(y) ,h = h))
}
errors_auto_ets_cv <- tsCV(Y[,2], forecastfunction = fore_ets, h = 12,
initial = 200)
res_ETS <- sqrt(colMeans(errors_auto_ets_cv^2, na.rm = TRUE))
# RW model CV
fore_rwf <- function(y, h) {
model <- Arima(y,order = c(0,1,0), include.drift = TRUE)
return(forecast(model, h = h))
}
errors_rw <- tsCV(Y[,2], forecastfunction = fore_rwf, h = 12,
initial = 200)
res_rw <- sqrt(colMeans(errors_rw^2, na.rm = TRUE))
results <- list(FAVAR = res_FAVAR, ARIMA = res_ARIMA, ETS = res_ETS, VAR = res_VAR, RWD = res_rw)
results <- t(data.frame(results))
View(results)
