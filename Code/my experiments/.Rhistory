# Factors rotation
ones_vec = rep(1, T)
Ffast = data.matrix(Y[,i_name]) # interest rate
k1 = dim(Ffast)[2] # (num of Ffast)
ly = cbind(ones_vec, Ffast, Fslow0)
svd <- svd(ly)
vl <-svd$u
d <- 1 / svd$d
vr <- svd$v
b = (vr * matrix(data = rep(d, dim(vr)[1]), ncol = dim(vr)[1], byrow = TRUE)) %*% (t(vl) %*% F0)
Ffast_ktimes = matrix(rep(Ffast, K), ncol = K)
coeffs = matrix(rep(b[2:(k1+1),], dim(Ffast_ktimes)[1]), ncol=K, byrow = TRUE)
Fr = F0 - Ffast_ktimes*coeffs
# FAVAR with clean factors
if(use_VAR == F){
Y_for_VAR = cbind(Fr, Y)
factor_names = paste('factor', 1:K)
colnames(Y_for_VAR)[1:K] <- factor_names
}
else
Y_for_VAR = Y
Y_for_VAR <- ts(Y_for_VAR, start = start, frequency = frequency)
VARselect(Y_for_VAR)
p = VARselect(Y_for_VAR)$selection[1] # according AIC
var <- VAR(Y_for_VAR, p)
y_hat <- forecast(var, h=h)
return(y_hat)
}
for_modeling <- read_excel("C:/Users/petrg/Desktop/Данные для диплома/real_big_data_alina.xlsx",
range = "R2C3:R242C296")
N_for_modeling <- dim(for_modeling)[2]
df_gdp <- for_modeling[(71):240,]
# Complete series only
complete_series_indices = c()
for(i in 1:N_for_modeling) {
if (sum(is.na(df_gdp[,i])) == 0) {
complete_series_indices = c(complete_series_indices, i)
}
}
df_gdp <- df_gdp[,complete_series_indices]
colnames(df_gdp) <- colnames(for_modeling)[complete_series_indices]
ts_gdp <- ts(df_gdp, start=c(2005,11), frequency = 12)
N_gdp <- dim(ts_gdp)[2]
T_gdp <- dim(ts_gdp)[1]
transformations_gdp <- rep(0, N_gdp)
# Standardize & SA for some reason (correct PCA extraction probably)
for (i in 1:N_gdp){
ts_gdp[,i] <- (ts_gdp[,i] - mean(ts_gdp[,i])) / sd(ts_gdp[,i])
transformations_gdp[i] <- ndiffs(ts_gdp[,i])
}
# induce stationarity
for (i in 1:N_gdp) {
NAs <- rep(NA, transformations_gdp[i])
if(transformations_gdp[i] != 0) {
ts_gdp[,i] = c(NAs, diff(ts_gdp[,i], transformations_gdp[i]))
}
}
ts_gdp <- na.omit(ts_gdp)
slow_index <- seq(N_gdp)[endsWith(colnames(ts_gdp), "_slow")]
y_names <- c("RUGDP=ECI_slow", "RUCBIR=ECI")
y_index <- seq(N_gdp)[colnames(ts_gdp) %in% y_names]
'%not_in%' <- Negate('%in%')
x_index <- which(seq(N_gdp) %not_in% y_index)
slow_index_not_y <- slow_index[slow_index %not_in% y_index] # w.r.t ts_gdp object
Y_gdp <- ts_gdp[,y_index]
X <- ts_gdp[,x_index]
X_slow <- ts_gdp[,slow_index_not_y]
print(colnames(Y_gdp))
T_gdp <- dim(Y_gdp)[1]
source("my_tsCV.R")
errors_FAVAR_cv_gdp_k1 <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name=y_name,
h = 12, X = X, Y = Y_gdp, X_slow = X_slow, K = 1, i_name = i_name,
initial = 144)
y_name <- "RUGDP=ECI_slow"
i_name <- "RUCBIR=ECI"
y <- Y_gdp[,2]
source("my_tsCV.R")
errors_FAVAR_cv_gdp_k1 <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name=y_name,
h = 12, X = X, Y = Y_gdp, X_slow = X_slow, K = 1, i_name = i_name,
initial = 144)
errors_FAVAR_cv_gdp_k1
tail(errors_FAVAR_cv_gdp_k1)
var <- VAR(Y_gdp, p=1)
forecast(var, 1)
{
start <- start(X)
frequency <- frequency(X)
X = X[1:length(y),]
Y = Y[1:length(y),]
X_slow = X_slow[1:length(y),]
N = dim(X)[2]
M = dim(Y)[2]
T = dim(X)[1]
# extract PC from X
XtX = t(X) %*% X
spectral_decomposition <- eigen(XtX)
eig_vec <- spectral_decomposition$vectors
eig_val <- spectral_decomposition$values
lam <- 1/sqrt(N) * eig_vec[,(1:K)]
F0 <- data.matrix(X) %*% lam
#extract PC from X_slow
XtX = t(X_slow) %*% X_slow
spectral_decomposition <- eigen(XtX)
eig_vec <- spectral_decomposition$vectors
eig_val <- spectral_decomposition$values
nslow <- dim(X_slow)[2]
lam <- 1 / sqrt(nslow) * eig_vec[,(1:K)]
Fslow0 <- data.matrix(X_slow) %*% lam
# Factors rotation
ones_vec = rep(1, T)
Ffast = data.matrix(Y[,i_name]) # interest rate
k1 = dim(Ffast)[2] # (num of Ffast)
ly = cbind(ones_vec, Ffast, Fslow0)
svd <- svd(ly)
vl <-svd$u
d <- 1 / svd$d
vr <- svd$v
b = (vr * matrix(data = rep(d, dim(vr)[1]), ncol = dim(vr)[1], byrow = TRUE)) %*% (t(vl) %*% F0)
Ffast_ktimes = matrix(rep(Ffast, K), ncol = K)
coeffs = matrix(rep(b[2:(k1+1),], dim(Ffast_ktimes)[1]), ncol=K, byrow = TRUE)
Fr = F0 - Ffast_ktimes*coeffs
# FAVAR with clean factors
if(use_VAR == F){
Y_for_VAR = cbind(Fr, Y)
factor_names = paste('factor', 1:K)
colnames(Y_for_VAR)[1:K] <- factor_names
}
else
Y_for_VAR = Y
Y_for_VAR <- ts(Y_for_VAR, start = start, frequency = frequency)
VARselect(Y_for_VAR)
p = VARselect(Y_for_VAR)$selection[1] # according AIC
var <- VAR(Y_for_VAR, p)
y_hat <- forecast::forecast(var, h=h)
return(y_hat)
}
fore_FAVAR <- function(X, Y, X_slow, K, y_name, i_name, h, y, use_VAR = F){
start <- start(X)
frequency <- frequency(X)
X = X[1:length(y),]
Y = Y[1:length(y),]
X_slow = X_slow[1:length(y),]
N = dim(X)[2]
M = dim(Y)[2]
T = dim(X)[1]
# extract PC from X
XtX = t(X) %*% X
spectral_decomposition <- eigen(XtX)
eig_vec <- spectral_decomposition$vectors
eig_val <- spectral_decomposition$values
lam <- 1/sqrt(N) * eig_vec[,(1:K)]
F0 <- data.matrix(X) %*% lam
#extract PC from X_slow
XtX = t(X_slow) %*% X_slow
spectral_decomposition <- eigen(XtX)
eig_vec <- spectral_decomposition$vectors
eig_val <- spectral_decomposition$values
nslow <- dim(X_slow)[2]
lam <- 1 / sqrt(nslow) * eig_vec[,(1:K)]
Fslow0 <- data.matrix(X_slow) %*% lam
# Factors rotation
ones_vec = rep(1, T)
Ffast = data.matrix(Y[,i_name]) # interest rate
k1 = dim(Ffast)[2] # (num of Ffast)
ly = cbind(ones_vec, Ffast, Fslow0)
svd <- svd(ly)
vl <-svd$u
d <- 1 / svd$d
vr <- svd$v
b = (vr * matrix(data = rep(d, dim(vr)[1]), ncol = dim(vr)[1], byrow = TRUE)) %*% (t(vl) %*% F0)
Ffast_ktimes = matrix(rep(Ffast, K), ncol = K)
coeffs = matrix(rep(b[2:(k1+1),], dim(Ffast_ktimes)[1]), ncol=K, byrow = TRUE)
Fr = F0 - Ffast_ktimes*coeffs
# FAVAR with clean factors
if(use_VAR == F){
Y_for_VAR = cbind(Fr, Y)
factor_names = paste('factor', 1:K)
colnames(Y_for_VAR)[1:K] <- factor_names
}
else
Y_for_VAR = Y
Y_for_VAR <- ts(Y_for_VAR, start = start, frequency = frequency)
VARselect(Y_for_VAR)
p = VARselect(Y_for_VAR)$selection[1] # according AIC
var <- VAR(Y_for_VAR, p)
y_hat <- forecast::forecast(var, h=h)
return(y_hat)
}
source("my_tsCV.R")
errors_FAVAR_cv_gdp_k1 <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name=y_name,
h = 12, X = X, Y = Y_gdp, X_slow = X_slow, K = 1, i_name = i_name,
initial = 144)
res_FAVAR_gdp_k1 <- sqrt(colMeans(errors_FAVAR_cv_gdp_k1^2, na.rm = TRUE))
res_FAVAR_gdp_k1
sum(res_FAVAR_gdp_k1)
for(k in 1:7) {
errors_FAVAR_cv_gdp_k <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name=y_name,
h = 12, X = X, Y = Y_gdp, X_slow = X_slow, K = k,
i_name = i_name,
initial = 144)
res_FAVAR_gdp_k <- sqrt(colMeans(errors_FAVAR_cv_gdp_k^2, na.rm = TRUE))
results = c(results, sum(res_FAVAR_gdp_k))
}
results = c()
for(k in 1:7) {
errors_FAVAR_cv_gdp_k <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name=y_name,
h = 12, X = X, Y = Y_gdp, X_slow = X_slow, K = k,
i_name = i_name,
initial = 144)
res_FAVAR_gdp_k <- sqrt(colMeans(errors_FAVAR_cv_gdp_k^2, na.rm = TRUE))
results = c(results, sum(res_FAVAR_gdp_k))
}
results
plot((1:7), results)
ggplot(x=(1:7), y=results) +
geom_line()+
geom_point()
ggplot(x=(1:7), y=results) +
geom_line()+
geom_point()
df <- as.data.frame(x=(1:7), y=results)
df
df <- as.data.frame(x=seq(1:7), y=results)
df
seq(1,7)
df <- as.data.frame(x=seq(1,7), y=results)
df
df <- as.data.frame( y=results)
df <- as.data.frame(y=results)
df <- as.data.frame(y=results)
df <- as.data.frame(res = results)
ggplot(x=seq(1,7), y=results) +
geom_line()+
geom_point()
seq(1,7)
df <- data.frame(dose=c("D0.5", "D1", "D2"),
len=c(4.2, 10, 29.5))
head(df)
df <- data.frame(k=seq(1,7),
sum_rsme=results)
head(df)
ggplot(data=df, aes(x=seq(1,7), y=results)) +
geom_line()+
geom_point()
ggplot(data=df, aes(x=seq(1,7), y=results)) +
geom_line()+
geom_point() + labs(x='number of K', y='Sum of RMSE for each horizon')
ggplot(data=df, aes(x=seq(1,7), y=results)) +
geom_line()+
geom_point() + labs(x='number of K', y='RMSE sum')
results = c()
for(k in 1:6) {
errors_FAVAR_cv_gdp_k <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name=y_name,
h = 12, X = X, Y = Y_gdp, X_slow = X_slow, K = k,
i_name = i_name,
initial = 144)
res_FAVAR_gdp_k <- sqrt(colMeans(errors_FAVAR_cv_gdp_k^2, na.rm = TRUE))
results = c(results, sum(res_FAVAR_gdp_k))
}
df <- data.frame(k=seq(1,7),
sum_rsme=results)
df <- data.frame(k=seq(1,7),
sum_rsme=results)
ggplot(data=df, aes(x=seq(1,7), y=results)) +
geom_line()+
geom_point() + labs(x='number of K', y='RMSE sum')
ggplot(data=df, aes(x=k, y=sum_rmse)) +
geom_line()+
geom_point() + labs(x='number of K', y='RMSE sum')
df <- data.frame(k=seq(1,6),
sum_rmse=results)
ggplot(data=df, aes(x=k, y=sum_rmse)) +
geom_line()+
geom_point() + labs(x='number of K', y='RMSE sum')
for_modeling <- read_excel("C:/Users/petrg/Desktop/Данные для диплома/real_big_data_alina.xlsx",
range = "R2C3:R242C296")
N_for_modeling <- dim(for_modeling)[2]
# Complete series only
complete_series_indices = c()
for(i in 1:N_for_modeling) {
if (sum(is.na(for_modeling[,i])) == 0) {
complete_series_indices = c(complete_series_indices, i)
}
}
df <- for_modeling[,complete_series_indices]
colnames(df) <- colnames(for_modeling)[complete_series_indices]
ts <- ts(df, start=c(2000,1), frequency = 12)
N <- dim(ts)[2]
T <- dim(ts)[1]
transformations <- rep(0, N)
#lns <- rep(0, N)
# Standardize & log
for (i in 1:N){
#if (means[i] > 10^4 & sum(ts[,i] <=0) == 0) {
#lns[i] <- 1
#ts[,i] <- log(ts[,i])
#}
ts[,i] <- (ts[,i] - mean(ts[,i])) / sd(ts[,i])
#[,i] <- ts[,i] - stl(ts[,i], 'periodic')$time.series[,1]
transformations[i] <- ndiffs(ts[,i])
}
# induce stationarity
for (i in 1:N) {
NAs <- rep(NA, transformations[i])
if(transformations[i] != 0) {
ts[,i] = c(NAs, diff(ts[,i], transformations[i]))
}
}
ts <- na.omit(ts)
slow_index <- seq(N)[endsWith(colnames(ts), "_slow")]
y_names <- c("aRUCPI_slow", "RUCBIR=ECI")
#y_names <- c("aRUCPI_slow", "RUCBIR=ECI", "RUUNR=ECI_slow")
y_index <- seq(N)[colnames(ts) %in% y_names]
'%not_in%' <- Negate('%in%')
x_index <- which(seq(N) %not_in% y_index)
slow_index_not_y <- slow_index[slow_index %not_in% y_index] # w.r.t ts object
Y <- ts[,y_index]
X <- ts[,x_index]
X_slow <- ts[,slow_index_not_y]
print(colnames(Y))
T <- dim(Y)[1]
errors_FAVAR_cv <- my_tsCV(y = Y[,2], forecastfunction = fore_FAVAR, y_name="aRUCPI_slow",
h = 12, X = X, Y = Y, X_slow = X_slow, K = 1, i_name = "RUCBIR=ECI",
initial = 200)
res_FAVAR <- sqrt(colMeans(errors_FAVAR_cv^2, na.rm = TRUE))
res_FAVAR
results = c()
for(k in (1:6)) {
errors_FAVAR_cv_k <- my_tsCV(y = Y[,2], forecastfunction = fore_FAVAR, y_name="aRUCPI_slow",
h = 12, X = X, Y = Y, X_slow = X_slow, K = k, i_name = "RUCBIR=ECI",
initial = 200)
res_FAVAR_k <- sqrt(colMeans(errors_FAVAR_cv_k^2, na.rm = TRUE))
results = c(results, sum(res_FAVAR_k))
}
df <- data.frame(k=seq(1,6),
sum_rmse=results)
ggplot(data=df, aes(x=k, y=sum_rmse)) +
geom_line()+
geom_point() + labs(x='number of K', y='RMSE sum')
for(k in (0:6)) {
errors_FAVAR_cv_k <- my_tsCV(y = Y[,2], forecastfunction = fore_FAVAR, y_name="aRUCPI_slow",
h = 12, X = X, Y = Y, X_slow = X_slow, K = k, i_name = "RUCBIR=ECI",
initial = 200, use_VAR = (k == 0))
res_FAVAR_k <- sqrt(colMeans(errors_FAVAR_cv_k^2, na.rm = TRUE))
results = c(results, sum(res_FAVAR_k))
}
df <- data.frame(k=seq(0,6),
sum_rmse=results)
ggplot(data=df, aes(x=k, y=sum_rmse)) +
geom_line()+
geom_point() + labs(x='number of K', y='RMSE sum')
results = c()
for(k in (0:6)) {
errors_FAVAR_cv_k <- my_tsCV(y = Y[,2], forecastfunction = fore_FAVAR, y_name="aRUCPI_slow",
h = 12, X = X, Y = Y, X_slow = X_slow, K = k, i_name = "RUCBIR=ECI",
initial = 200, use_VAR = (k == 0))
res_FAVAR_k <- sqrt(colMeans(errors_FAVAR_cv_k^2, na.rm = TRUE))
results = c(results, sum(res_FAVAR_k))
}
df <- data.frame(k=seq(0,6),
sum_rmse=results)
ggplot(data=df, aes(x=k, y=sum_rmse)) +
geom_line()+
geom_point() + labs(x='number of K', y='RMSE sum')
3 == 0
for(k in (0:6)) {
errors_FAVAR_cv_k <- my_tsCV(y = Y[,2], forecastfunction = fore_FAVAR, y_name="aRUCPI_slow",
h = 12, X = X, Y = Y, X_slow = X_slow, K = k, i_name = "RUCBIR=ECI",
initial = 200, use_VAR = (k == 0))
res_FAVAR_k <- sqrt(colMeans(errors_FAVAR_cv_k^2, na.rm = TRUE))
results = c(results, sum(res_FAVAR_k))
print(sum(res_FAVAR_k))
}
errors_FAVAR_cv_k <- my_tsCV(y = Y[,2], forecastfunction = fore_FAVAR, y_name="aRUCPI_slow",
h = 12, X = X, Y = Y, X_slow = X_slow, K = 2, i_name = "RUCBIR=ECI",
initial = 200, use_VAR = (k == 0))
res_FAVAR_k <- sqrt(colMeans(errors_FAVAR_cv_k^2, na.rm = TRUE))
res_FAVAR_k
(k== 0)*1
(0 == 0) *1
for(k in (0:6)) {
errors_FAVAR_cv_k <- my_tsCV(y = Y[,2], forecastfunction = fore_FAVAR, y_name="aRUCPI_slow",
h = 12, X = X, Y = Y, X_slow = X_slow, K = k + (k==0),
i_name = "RUCBIR=ECI",
initial = 200, use_VAR = (k == 0))
res_FAVAR_k <- sqrt(colMeans(errors_FAVAR_cv_k^2, na.rm = TRUE))
results = c(results, sum(res_FAVAR_k))
print(sum(res_FAVAR_k))
}
results = c()
for(k in (0:6)) {
errors_FAVAR_cv_k <- my_tsCV(y = Y[,2], forecastfunction = fore_FAVAR, y_name="aRUCPI_slow",
h = 12, X = X, Y = Y, X_slow = X_slow, K = k + (k==0),
i_name = "RUCBIR=ECI",
initial = 200, use_VAR = (k == 0))
res_FAVAR_k <- sqrt(colMeans(errors_FAVAR_cv_k^2, na.rm = TRUE))
results = c(results, sum(res_FAVAR_k))
print(sum(res_FAVAR_k))
}
df <- data.frame(k=seq(0,6),
sum_rmse=results)
ggplot(data=df, aes(x=k, y=sum_rmse)) +
geom_line()+
geom_point() + labs(x='number of K', y='RMSE sum')
for_modeling <- read_excel("C:/Users/petrg/Desktop/Данные для диплома/real_big_data_alina.xlsx",
range = "R2C3:R242C296")
N_for_modeling <- dim(for_modeling)[2]
df_gdp <- for_modeling[(71):240,]
# Complete series only
complete_series_indices = c()
for(i in 1:N_for_modeling) {
if (sum(is.na(df_gdp[,i])) == 0) {
complete_series_indices = c(complete_series_indices, i)
}
}
df_gdp <- df_gdp[,complete_series_indices]
colnames(df_gdp) <- colnames(for_modeling)[complete_series_indices]
ts_gdp <- ts(df_gdp, start=c(2005,11), frequency = 12)
N_gdp <- dim(ts_gdp)[2]
T_gdp <- dim(ts_gdp)[1]
transformations_gdp <- rep(0, N_gdp)
# Standardize & SA for some reason (correct PCA extraction probably)
for (i in 1:N_gdp){
ts_gdp[,i] <- (ts_gdp[,i] - mean(ts_gdp[,i])) / sd(ts_gdp[,i])
transformations_gdp[i] <- ndiffs(ts_gdp[,i])
}
# induce stationarity
for (i in 1:N_gdp) {
NAs <- rep(NA, transformations_gdp[i])
if(transformations_gdp[i] != 0) {
ts_gdp[,i] = c(NAs, diff(ts_gdp[,i], transformations_gdp[i]))
}
}
ts_gdp <- na.omit(ts_gdp)
slow_index <- seq(N_gdp)[endsWith(colnames(ts_gdp), "_slow")]
y_names <- c("RUGDP=ECI_slow", "RUCBIR=ECI")
y_index <- seq(N_gdp)[colnames(ts_gdp) %in% y_names]
'%not_in%' <- Negate('%in%')
x_index <- which(seq(N_gdp) %not_in% y_index)
slow_index_not_y <- slow_index[slow_index %not_in% y_index] # w.r.t ts_gdp object
Y_gdp <- ts_gdp[,y_index]
X <- ts_gdp[,x_index]
X_slow <- ts_gdp[,slow_index_not_y]
print(colnames(Y_gdp))
T_gdp <- dim(Y_gdp)[1]
y_name <- "RUGDP=ECI_slow"
i_name <- "RUCBIR=ECI"
y <- Y_gdp[,2]
source("my_tsCV.R")
errors_FAVAR_cv_gdp_k1 <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name=y_name,
h = 12, X = X, Y = Y_gdp, X_slow = X_slow, K = 1, i_name = i_name,
initial = 144)
res_FAVAR_gdp_k1 <- sqrt(colMeans(errors_FAVAR_cv_gdp_k1^2, na.rm = TRUE))
res_FAVAR_gdp_k1
results = c()
for(k in 0:6) {
errors_FAVAR_cv_gdp_k <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name=y_name,
h = 12, X = X, Y = Y_gdp, X_slow = X_slow, K = k + (k == 0),
i_name = i_name,
initial = 144, use_VAR = (k == 0))
res_FAVAR_gdp_k <- sqrt(colMeans(errors_FAVAR_cv_gdp_k^2, na.rm = TRUE))
results = c(results, sum(res_FAVAR_gdp_k))
}
df <- data.frame(k=seq(0,6),
sum_rmse=results)
ggplot(data=df, aes(x=k, y=sum_rmse)) +
geom_line()+
geom_point() + labs(x='number of K', y='RMSE sum')
# unemp
y_names <- c("aRUCPI_slow", "RUUNR=ECI_slow")
y_index <- seq(N)[colnames(ts) %in% y_names]
slow_index <- seq(N)[endsWith(colnames(ts), "_slow")]
'%not_in%' <- Negate('%in%')
x_index <- which(seq(N) %not_in% y_index)
slow_index_not_y <- slow_index[slow_index %not_in% y_index] # w.r.t ts object
Y <- ts[,y_index]
X <- ts[,x_index]
X_slow <- ts[,slow_index_not_y]
print(colnames(Y))
T <- dim(Y)[1]
y_name <- "RUUNR=ECI_slow"
i_name <- "aRUCPI_slow"
y <- Y[,2]
source("my_tsCV.R")
results = c()
results = c()
for(k in 0:6) {
errors_FAVAR_cv_unemp <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name=y_name,
h = 12, X = X, Y = Y, X_slow = X_slow, K = k + (k==0),
i_name = i_name,
initial = 200, use_VAR = (k==0))
res_FAVAR_unemp <- sqrt(colMeans(errors_FAVAR_cv_unemp^2, na.rm = TRUE))
print(sum(res_FAVAR_unemp))
}
df <- data.frame(k=seq(0,6),
sum_rmse=results)
results
results = c()
for(k in 0:6) {
errors_FAVAR_cv_unemp <- my_tsCV(y = y, forecastfunction = fore_FAVAR, y_name=y_name,
h = 12, X = X, Y = Y, X_slow = X_slow, K = k + (k==0),
i_name = i_name,
initial = 200, use_VAR = (k==0))
res_FAVAR_unemp <- sqrt(colMeans(errors_FAVAR_cv_unemp^2, na.rm = TRUE))
results <- c(results, sum(res_FAVAR_unemp))
print(sum(res_FAVAR_unemp))
}
df <- data.frame(k=seq(0,6),
sum_rmse=results)
ggplot(data=df, aes(x=k, y=sum_rmse)) +
geom_line()+
geom_point() + labs(x='number of K', y='RMSE sum')
